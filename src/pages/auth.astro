---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false

import { get_auth_url } from '@helpers/env'
import type { Alert } from '@dtypes/layout_components'
import { get_user_prizes } from '@helpers/api.fanfest/code'
import type { UserPrizes } from '@dtypes/api.fanfest'

let user_prizes:UserPrizes | null = null
try {
    user_prizes = auth_token ? await get_user_prizes(auth_token) : null
} catch (error) {
    console.log(error)
}

let alert:Alert | null = null

const error = Astro.url.searchParams.get('error') as string
if (error) {
    alert = {
        title: t('oops'),
        content: t(error as any)
    }
}

const IBN_CHARACTER_ID = 1978535095

import PageLanding from '@components/page/PageLanding.astro';

const page_title = t('index.page_title');

import Default from '@layouts/Default.astro';

import TextBox from '@components/layout/TextBox.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import Wrapper from '@components/compositions/Wrapper.astro';

import PilotName from '@components/blocks/PilotName.astro'
import Button from '@components/blocks/Button.astro';
import CharacterPicture from '@components/blocks/CharacterPicture.astro';
import ShowAlert from '@components/blocks/ShowAlert.astro'

import ArrowRight from '@components/icons/buttons/ArrowRight.astro';
import FixedFluid from '@components/compositions/FixedFluid.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro';
---

{alert && <ShowAlert alert={alert} /> }

<Default title={page_title}>
	<PageLanding
        fullscreen={true}
        wide={true}
        neocom={false}
        inverted={true}
    >
		<Wrapper
			class="[ content-section ][ min-h-[100vh] max-w-[48rem] ]"
			centered={true}
			padding_block='0'
			padding_inline='0'
            neocom={false}
		>
			<Flexblock centered={true} class="[ text-center relative pb-[45px] ]" gap='var(--space-xl)'>
				<img class="[ marshall ]" src="/images/marshall.png" width="1172" height="567" />
				
				<Flexblock centered={true} gap='var(--space-xl)'>
                    <Flexblock gap='var(--space-xl)'>
                        <TextBox>
                            <h3 class="[ blink-animation ]">{t('incoming_transmision')}</h3>    
					    </TextBox>

                        <ComponentBlock
                            class="[ text-left animate-bounce-fade-in animation-delay-1000 animate-duration-faster ]"
                            max_width='450px'
                            padding_block='var(--space-2xs)'
                            padding_inline='var(--space-2xs)'
                        >
                            <FixedFluid
                                class="[ items-center ]"
                                width='128px'
                            >
                                <CharacterPicture
                                    character_id={IBN_CHARACTER_ID}
                                    character_name="Ibn Khatab"
                                    size={128}
                                    icon_quality={128}
                                />
                                <Flexblock gap='var(--space-3xs)'>
                                    <PilotName
                                        character_id={IBN_CHARACTER_ID}
                                        character_name="Ibn Khatab"
                                    />
                                    <p>{t('ibn_greeting')}</p>
                                </Flexblock>
                            </FixedFluid>
                        </ComponentBlock>
                    </Flexblock>

                    {!user_prizes?.char ?
                        <Button
                            data-tippy-content={t('auth_button_tooltip')}
                            data-tippy-delay="[1000, 200]"
                            class="[ animate-fade-in animate-duration-faster animation-delay-2000 ]"
                            href={get_auth_url()}
                        >
                            {t('auth_button')}
                            <ArrowRight />
                        </Button>
                        :
                        <FlexInline>
                            <Button
                                class="[ animate-fade-in animate-duration-faster animation-delay-2000 ]"
                                href={translatePath('/code')}
                            >
                                {t('continue_as')} {user_prizes.char.name}
                                <ArrowRight />
                            </Button>
                            <Button
                                color='transparent'
                                data-tippy-content={t('auth_button_tooltip')}
                                data-tippy-delay="[1000, 200]"
                                class="[ animate-fade-in animate-duration-faster animation-delay-3000 ]"
                                href={get_auth_url()}
                            >
                                {t('use_different_character')}
                                <ArrowRight />
                            </Button>
                        </FlexInline>
                    }
				</Flexblock>
			</Flexblock>
		</Wrapper>
	</PageLanding>
</Default>

<style lang="scss">
    body {
        --foreground:           white;
        --background:           black;
        --highlight:            #e21d41;
    }

	.marshall {
		max-height: 50vh;
		width: auto;
		height: auto;
        image-rendering: pixelated;
	}

	a {
		font-family: var(--heading-font);
		font-size: var(--step-5);
		text-transform: uppercase;
	}
</style>